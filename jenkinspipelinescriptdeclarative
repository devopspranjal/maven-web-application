pipeline{
    agent any
    
    parameters {
  choice choices: ['master', 'development', 'qa', 'prod', 'test'], description: 'select a branch name', name: 'branchName'
}
    
    tools{
        maven "maven3.8.5"
    }
    triggers {
  pollSCM ('* * * * *')
  // cron ('* * * * *')
}
options {
  timestamps()
   buildDiscarder logRotator(artifactDaysToKeepStr: '3', artifactNumToKeepStr: '5', daysToKeepStr: '1', numToKeepStr: '3')
}


    stages{
        stage('CheckoutCode'){

            steps{
		sendSlackNotifications('STARTED')
                 git branch: "${params.branchName}, credentialsId: '4a93db71-fd0d-499f-b742-18a768e2a17b', url: 'https://github.com/devopspranjal/maven-web-application.git'
            }
        }
        stage('Buils'){
            steps{
                sh "mvn clean package"
            }
            
        }
        stage('GenerateReport'){
            steps{
                sh "mvn sonar:sonar"
            }
        }
        stage('UploadToNexusRepo'){
            steps{
                sh "mvn deploy"
            }
        }
        stage('RunTheApplication'){
            steps{
                sshagent(['8bc333f2-0de5-4b1d-86d5-e8491f15c037']) {
            sh "scp -o  StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.232.111.76:/opt/apache-tomcat-9.0.64/webapps"
            }
        }
    }
}//stages closing

post {
  success {
	sendSlackNotifications(currentBuild.result)
    
  }
  failure {
    
	sendSlackNotifications(currentBuild.result)
  }
}


}//pipeline closing

def sendSlackNotifications(String buildStatus = 'STARTED') {
  
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'build-notification')
}
